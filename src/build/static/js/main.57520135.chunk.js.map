{"version":3,"sources":["Data/NavData.js","Data/NavDataProject.js","Component/Navigation/Nav.jsx","Component/Navigation/index.js","Pages/Home/index.js","Pages/Home/Home.jsx","Pages/Blog/BlogContent.js","Component/BlogList/BlogListComponent.jsx","Component/Upvotes/BlogUpVote.jsx","Component/Comment/BlogComment.jsx","Component/Comment/AddCommentForm.jsx","Pages/PageNotFound/index.js","Pages/Blog/BlogPage.jsx","Pages/Blog/index.js","Pages/Blog/BlogListPage.jsx","App.js","serviceWorker.js","index.js"],"names":["navItem","url","label","NavItem","this","props","className","to","NavDataProject","map","items","idx","key","labelproject","urlproject","Component","NavItemProject","Nav","NavData","item","Home","Blogcontent","title","text","BlogListComponent","content","Fragment","paragraph","substring","BlogUpVotes","name","upvote","setUpVote","UpVote","a","fetch","method","result","json","body","onClick","BlogComment","comments","userName","AddCommentForm","setInfoComment","useState","setUsername","comment","setComment","addComment","JSON","stringify","headers","htmlFor","type","value","onChange","event","target","id","cols","rows","PageNotFound","BlogPage","match","params","find","otherContent","filter","blogInfo","setBlogInfo","useEffect","console","log","fetchData","BlogUpVote","BlogListPage","BlogContent","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57520135.chunk.js","sourcesContent":["export default [\r\n    {\r\n        navItem: 'HOME',\r\n        url: '/',\r\n    },\r\n    // {\r\n    //     navItem: 'PROJECT',\r\n    //     url: '/projects',\r\n    // },\r\n    {\r\n        navItem: 'BLOG',\r\n        url: '/bloglist',\r\n    },\r\n    {\r\n        navItem: 'CONTACT',\r\n        url: '/contact',\r\n    },\r\n]","export default [\r\n    {\r\n        label: \"DESIGN\",\r\n        url: \"/projects/design\",\r\n    },\r\n    {\r\n        label: \"DEVELOPMENT\",\r\n        url: \"/projects/development\",\r\n    },\r\n    {\r\n        label: \"PHOTOGRAPHY\",\r\n        url: \"/projects/photography\",\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport { \r\n    Link,\r\n} from 'react-router-dom';\r\n\r\nimport NavData from '../../Data/NavData'\r\nimport NavDataProject from '../../Data/NavDataProject'\r\n\r\nclass NavItem extends Component {\r\n    render() {\r\n        const {url, navItem} = this.props\r\n        if(navItem === \"PROJECT\") {\r\n            return(\r\n                <li className = \"nav__item\">\r\n                    <Link className = \"nav__link\" to = {url} >{navItem}</Link>\r\n                    <ul className =\"nav__item-project\">\r\n                        {\r\n                            NavDataProject.map((items, idx) => \r\n                                <NavItemProject \r\n                                    key ={idx}\r\n                                    labelproject = {items.label}\r\n                                    urlproject = {items.url}\r\n                                /> \r\n                            )\r\n                        }\r\n                    </ul>\r\n                </li>\r\n            ) \r\n        } else {\r\n            return (\r\n                <li className = \"nav__item\">\r\n                    <Link className = \"nav__link\" to = {url} >{navItem}</Link>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n}\r\nclass NavItemProject extends Component {\r\n    render() {\r\n        const {labelproject,urlproject} = this.props\r\n        return (\r\n            <li className =\"nav__item nav__projectlist-item\">\r\n                <Link className =\"nav__link nav__link--dropdown\" to = {urlproject}>{labelproject}</Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\nexport default class Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"header\">\r\n                \r\n                <ul className = \"nav nav--center\">\r\n                    {\r\n                        NavData.map((item, idx) => {\r\n                            return (\r\n                                <NavItem\r\n                                    key = {idx}\r\n                                    navItem = {item.navItem}\r\n                                    url = {item.url}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import Nav from './Nav'\r\n\r\nexport default Nav","import Home from './Home'\r\n\r\nexport default Home","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() { \r\n        return(\r\n            <div className=\"Home\">\r\n                <h1>WELCOME TO MY BLOG</h1>\r\n                <p>At tempor commodo ullamcorper a lacus vestibulum sed. \r\n                    Non blandit massa enim nec dui nunc mattis enim. \r\n                    Vestibulum morbi blandit cursus risus. Non enim praesent elementum facilisis leo vel fringilla est ullamcorper. \r\n                    Urna porttitor rhoncus dolor purus non enim praesent. Nam libero justo laoreet sit. \r\n                    Aliquam faucibus purus in massa tempor nec feugiat nisl pretium. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. \r\n                    Urna nec tincidunt praesent semper feugiat. Eget nunc lobortis mattis aliquam faucibus purus in massa.\r\n                </p>\r\n                <p>\r\n                    Id aliquet lectus proin nibh nisl condimentum. Porttitor massa id neque aliquam vestibulum. \r\n                    Turpis egestas pretium aenean pharetra magna ac placerat vestibulum. \r\n                    Blandit turpis cursus in hac habitasse platea dictumst quisque. Non curabitur gravida arcu ac tortor dignissim convallis. \r\n                    Vel facilisis volutpat est velit egestas. Etiam dignissim diam quis enim. Nibh cras pulvinar mattis nunc sed. \r\n                    Dolor sit amet consectetur adipiscing elit. Augue mauris augue neque gravida in fermentum. \r\n                    Habitant morbi tristique senectus et netus et malesuada. Euismod in pellentesque massa placerat duis. \r\n                    Hendrerit dolor magna eget est lorem ipsum dolor. Massa sapien faucibus et molestie ac feugiat sed. Justo nec ultrices dui sapien eget. \r\n                    Lectus sit amet est placerat in. Id interdum velit laoreet id.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","const Blogcontent = [\r\n    {\r\n        url: \"learn-react\",\r\n        title: \"The fastest way to learn React\",\r\n        text: [\r\n            `Sit amet aliquam id diam maecenas ultricies mi. \r\n            Est placerat in egestas erat imperdiet sed euismod nisi. \r\n            Tristique risus nec feugiat in fermentum posuere urna nec.\r\n            Amet facilisis magna etiam tempor orci eu lobortis elementum nibh. \r\n            Sed felis eget velit aliquet sagittis id consectetur purus ut. \r\n            Sit amet consectetur adipiscing elit ut aliquam. \r\n            Scelerisque eu ultrices vitae auctor eu augue ut lectus arcu. \r\n            Mattis rhoncus urna neque viverra justo nec. Consectetur lorem donec massa sapien. \r\n            Imperdiet massa tincidunt nunc pulvinar sapien et ligula. \r\n            Lorem dolor sed viverra ipsum nunc aliquet bibendum enim facilisis.`\r\n        ]\r\n    },\r\n    {\r\n        url: \"learn-redux\",\r\n        title: \"Why you should learn Redux?\",\r\n        text: [\r\n            `Tristique nulla aliquet enim tortor at auctor. \r\n            Curabitur gravida arcu ac tortor dignissim convallis aenean. \r\n            Mattis molestie a iaculis at erat pellentesque adipiscing commodo. \r\n            Accumsan tortor posuere ac ut consequat semper. Diam donec adipiscing tristique risus nec feugiat in fermentum. \r\n            Tristique risus nec feugiat in fermentum posuere urna nec tincidunt.`,\r\n            \r\n            `Integer eget aliquet nibh praesent. Praesent elementum facilisis leo vel fringilla est ullamcorper eget nulla. \r\n            Imperdiet proin fermentum leo vel orci porta non. Quam vulputate dignissim suspendisse in. Quis lectus nulla at volutpat diam. \r\n            Nisl vel pretium lectus quam.`\r\n        ]\r\n    },\r\n    {\r\n        url: \"introduction-javascript\",\r\n        title: \"What is JavaScript?\",\r\n        text: [\r\n            `Sed arcu non odio euismod lacinia at quis. Sed risus ultricies tristique nulla aliquet. \r\n            Sed id semper risus in hendrerit gravida. Malesuada fames ac turpis egestas sed tempus urna et. \r\n            Tellus mauris a diam maecenas sed. Urna molestie at elementum eu facilisis. \r\n            Posuere urna nec tincidunt praesent semper feugiat nibh. At lectus urna duis convallis convallis tellus. \r\n            Et ligula ullamcorper malesuada proin libero nunc consequat. \r\n            Sagittis eu volutpat odio facilisis mauris sit amet massa vitae. \r\n            Morbi tristique senectus et netus et malesuada. Rutrum tellus pellentesque eu tincidunt tortor. \r\n            Vitae congue eu consequat ac felis donec et odio pellentesque. \r\n            Dictum at tempor commodo ullamcorper a lacus vestibulum sed.`,\r\n\r\n            `Consectetur adipiscing elit pellentesque habitant morbi tristique senectus et. \r\n            Lacus vel facilisis volutpat est velit egestas dui id. Nec feugiat nisl pretium fusce id. \r\n            At augue eget arcu dictum varius duis at consectetur lorem. Pellentesque sit amet porttitor eget dolor morbi non arcu. \r\n            Viverra adipiscing at in tellus integer feugiat. \r\n            Condimentum vitae sapien pellentesque habitant morbi tristique senectus et. \r\n            Ac tincidunt vitae semper quis lectus nulla at volutpat diam. Vestibulum sed arcu non odio euismod lacinia. \r\n            leifend mi in nulla posuere sollicitudin. Pretium fusce id velit ut tortor pretium. \r\n            Sed vulputate mi sit amet mauris commodo quis imperdiet. Semper feugiat nibh sed pulvinar proin gravida.`\r\n        ]\r\n    },\r\n    {\r\n        url: \"learn-css\",\r\n        title: \"How to add CSS?\",\r\n        text: [\r\n            `Sed arcu non odio euismod lacinia at quis. Sed risus ultricies tristique nulla aliquet. \r\n            Sed id semper risus in hendrerit gravida. Malesuada fames ac turpis egestas sed tempus urna et. \r\n            Tellus mauris a diam maecenas sed. Urna molestie at elementum eu facilisis. \r\n            Posuere urna nec tincidunt praesent semper feugiat nibh. At lectus urna duis convallis convallis tellus. \r\n            Et ligula ullamcorper malesuada proin libero nunc consequat. \r\n            Sagittis eu volutpat odio facilisis mauris sit amet massa vitae. \r\n            Morbi tristique senectus et netus et malesuada. Rutrum tellus pellentesque eu tincidunt tortor. \r\n            Vitae congue eu consequat ac felis donec et odio pellentesque. \r\n            Dictum at tempor commodo ullamcorper a lacus vestibulum sed.`,\r\n\r\n            `Dignissim suspendisse in est ante in nibh mauris. Libero volutpat sed cras ornare. \r\n            In hendrerit gravida rutrum quisque non. Posuere urna nec tincidunt praesent semper feugiat nibh sed. \r\n            Donec et odio pellentesque diam. Mauris pellentesque pulvinar pellentesque habitant morbi tristique senectus et. \r\n            Volutpat ac tincidunt vitae semper quis lectus nulla at volutpat. \r\n            Aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant morbi. \r\n            Id venenatis a condimentum vitae sapien pellentesque habitant morbi tristique. `,\r\n\r\n            `Consectetur adipiscing elit pellentesque habitant morbi tristique senectus et. \r\n            Lacus vel facilisis volutpat est velit egestas dui id. Nec feugiat nisl pretium fusce id. \r\n            At augue eget arcu dictum varius duis at consectetur lorem. Pellentesque sit amet porttitor eget dolor morbi non arcu. \r\n            Viverra adipiscing at in tellus integer feugiat. \r\n            Condimentum vitae sapien pellentesque habitant morbi tristique senectus et. \r\n            Ac tincidunt vitae semper quis lectus nulla at volutpat diam. Vestibulum sed arcu non odio euismod lacinia. \r\n            leifend mi in nulla posuere sollicitudin. Pretium fusce id velit ut tortor pretium. \r\n            Sed vulputate mi sit amet mauris commodo quis imperdiet. Semper feugiat nibh sed pulvinar proin gravida.`\r\n        ]\r\n    },\r\n]\r\n\r\nexport default Blogcontent","import React from 'react'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\n\r\nconst BlogListComponent = ({content}) => (\r\n    <React.Fragment>\r\n        {\r\n            content.map((paragraph,idx) => (\r\n                <div className = \"blog__item\" key = {idx}>\r\n                    <Link className = \"blog__link\"  to ={`/blog/${paragraph.url}`}>\r\n                        <h3>{paragraph.title}</h3>\r\n                    </Link>\r\n                    <p>{paragraph.text[0].substring(0,250)} ...</p>\r\n                </div>\r\n                \r\n            ))\r\n        }\r\n    </React.Fragment>\r\n)\r\n\r\nexport default BlogListComponent\r\n\r\n\r\n// export default class BlogListComponent extends Component {\r\n//     render() {\r\n//         return(\r\n//             <React.Fragment>\r\n//         {\r\n//             this.props.content.map((paragraph,idx) => (\r\n//                 <div className = \"blog__item\" key = {idx}>\r\n//                     <Link className = \"blog__link\"  to ={`/blog/${paragraph.url}`}>\r\n//                         <h3>{paragraph.title}</h3>\r\n//                     </Link>\r\n//                     <p>{paragraph.text[0].substring(0,250)} ...</p>\r\n//                 </div>\r\n                \r\n//             ))\r\n//         }\r\n//     </React.Fragment>\r\n//         )\r\n//     }\r\n// }","import React from 'react'\r\n\r\nconst BlogUpVotes = ({name, upvote, setUpVote}) => {\r\n\r\n    const UpVote = async () => {\r\n        const result = await fetch(`/api/blog/${name}/upvote`, {\r\n            method : 'POST'\r\n        })\r\n    \r\n        const body = await result.json()\r\n        \r\n        setUpVote(body)\r\n    }\r\n    \r\n    return (\r\n        <div className = \"blog__upvote\">\r\n            <button onClick = {() => UpVote()}>Vote</button>\r\n            <p>This post has been upvoted {upvote} times</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogUpVotes","import React from 'react'\r\n\r\nconst BlogComment = ({comments}) => (\r\n    <React.Fragment>\r\n        <h3>Comments</h3>\r\n        {\r\n            comments.map((item,idx) => (\r\n                <div className=\"blog__comment\" key = {idx}>\r\n                    <p className=\"blog__comment-username\">{item.userName}</p>\r\n                    <p>{item.text}</p>\r\n                </div>\r\n            ))\r\n        }\r\n    </React.Fragment>\r\n)\r\n\r\nexport default BlogComment","import React, {useState} from 'react'\r\n\r\nconst AddCommentForm = ({name, setInfoComment}) => {\r\n\r\n    const [userName, setUsername] = useState('')\r\n    const [comment, setComment] = useState('')\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/blog/${name}/comment`, {\r\n            method: 'POST',\r\n            body : JSON.stringify({userName, text: comment}),  //userName và text là property của array comment\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const body = await result.json()\r\n\r\n        setInfoComment(body)\r\n        setUsername('')\r\n        setComment('')\r\n    }\r\n    return (\r\n        <div className=\"blog__add-comment\">\r\n            <h3>Add a comment</h3>\r\n            <label htmlFor=\"\">\r\n                User: \r\n                <input type=\"text\" value ={userName} onChange = {(event) => setUsername(event.target.value)}/>\r\n            </label>\r\n            <label htmlFor=\"\">\r\n                Comment:\r\n                <textarea name=\"\" id=\"\" cols=\"50\" rows=\"4\" value ={comment} onChange = {(event) => setComment(event.target.value)}></textarea>\r\n            </label>\r\n            \r\n            <button onClick = {() => addComment()}>Add comment</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCommentForm","import React from 'react'\r\n\r\nconst PageNotFound = () => (\r\n    <h1 className= \"not-found\">404: Page Not Found</h1>\r\n)\r\n\r\nexport default PageNotFound","import React, {useState, useEffect} from 'react'\r\nimport Blogcontent from './BlogContent'\r\nimport BlogListComponent from '../../Component/BlogList/BlogListComponent'\r\nimport BlogUpVote from '../../Component/Upvotes/BlogUpVote'\r\nimport BlogComment from '../../Component/Comment/BlogComment'\r\nimport AddCommentForm from '../../Component/Comment/AddCommentForm'\r\nimport PageNotFound from '../PageNotFound'\r\n\r\nconst BlogPage = ({match}) => {\r\n    const url = match.params.name;\r\n    const content = Blogcontent.find(content => content.url === url) \r\n    const otherContent = Blogcontent.filter(content => content.url !== url)\r\n\r\n    const [blogInfo, setBlogInfo] = useState({upvote: 0, comment: []})\r\n\r\n    useEffect(()=> {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/blog/${url}`)\r\n            const body = await result.json()\r\n            console.log(body)\r\n            setBlogInfo(body)\r\n        }\r\n        fetchData()\r\n    },[url])\r\n\r\n    if (!content) return <PageNotFound/>\r\n\r\n    return(\r\n        <div className = \"blog-list-item\">\r\n            <h1>{content.title}</h1>\r\n            <BlogUpVote\r\n                name = {url}\r\n                upvote = {blogInfo.upvote}\r\n                setUpVote = {setBlogInfo}\r\n            />\r\n            {content.text.map((paragraph,idx) => (\r\n                <p key = {idx} >{paragraph}</p>\r\n            ))}\r\n            <BlogComment comments = {blogInfo.comment}/>\r\n            <AddCommentForm \r\n                name = {url} \r\n                setInfoComment = {setBlogInfo}\r\n            />\r\n            <h2>Other Content</h2>\r\n            <BlogListComponent content = {otherContent}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPage\r\n","import BlogListPage from './BlogListPage'\r\n\r\nexport default BlogListPage","import React from 'react'\r\n\r\nimport BlogContent from './BlogContent'\r\nimport BlogListComponent from '../../Component/BlogList/BlogListComponent'\r\n\r\nconst BlogList = () => (\r\n    <div className=\"blog\">\r\n        <h1>ARTICLE</h1>\r\n        <BlogListComponent content = {BlogContent}/>\r\n    </div>\r\n)\r\n\r\nexport default BlogList","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nimport './Style/App.css'\n\nimport Nav from './Component/Navigation'\n\nimport Home from './Pages/Home'\nimport BlogPage from './Pages/Blog/BlogPage'\nimport BlogListPage from './Pages/Blog'\n// import Contact from './Pages/Contact'\nimport PageNotFound from './Pages/PageNotFound'\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Nav/>\n\n        <Switch>\n          <Route exact path =\"/\" ><Home/></Route>\n          <Route path = \"/bloglist\" component = {BlogListPage} />\n          <Route exact path = \"/blog/:name\" component = {BlogPage} />\n          {/* <Route path = \"/contact\"><Contact/></Route> */}\n          <Route component = {PageNotFound}></Route>\n        </Switch>\n      </Router>\n    )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'whatwg-fetch';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}